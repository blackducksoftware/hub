version: '3.6'
# Starting with the 2019.2.0 release: DO NOT EDIT THIS FILE!!!
# ADD ANY OF YOUR OVERRIDES IN THE docker-compose.local-overrides.yml FILE
# Refer to the Release Notes or Installation Guide for more information.

services:
  authentication:
    user: authentication:root
    image: blackducksoftware/blackduck-authentication:2021.10.6
    volumes:
    - authentication-volume:/opt/blackduck/hub/hub-authentication/ldap
    - {type: tmpfs, target: /opt/blackduck/hub/hub-authentication/security}
    env_file: [blackduck-config.env , hub-postgres.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/api/health-checks/liveness',
        /opt/blackduck/hub/hub-authentication/security/root.crt, /opt/blackduck/hub/hub-authentication/security/blackduck_system.crt,
        /opt/blackduck/hub/hub-authentication/security/blackduck_system.key]
      interval: 30s
      timeout: 60s
      retries: 15
      start_period: 7200s
    environment:
       HUB_MAX_MEMORY: 512m
       HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {cpus: '1', memory: 1024M}
        reservations: {memory: 1024M}
  webapp:
    user: webapp:root
    image: blackducksoftware/blackduck-webapp:2021.10.6
    volumes:
    - log-volume:/opt/blackduck/hub/logs
    - {type: tmpfs, target: /opt/blackduck/hub/hub-webapp/security}
    env_file: [blackduck-config.env , hub-postgres.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/api/health-checks/liveness',
        /opt/blackduck/hub/hub-webapp/security/root.crt, /opt/blackduck/hub/hub-webapp/security/blackduck_system.crt,
        /opt/blackduck/hub/hub-webapp/security/blackduck_system.key]
      interval: 30s
      timeout: 60s
      retries: 15
      start_period: 7200s
    environment:
      HUB_MAX_MEMORY: 2048m
      HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {cpus: '1', memory: 2560M}
        reservations: {cpus: '1', memory: 2560M}
  scan:
    user: scan:root
    image: blackducksoftware/blackduck-scan:2021.10.6
    env_file: [blackduck-config.env , hub-postgres.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/api/health-checks/liveness',
        /opt/blackduck/hub/hub-scan/security/root.crt, /opt/blackduck/hub/hub-scan/security/blackduck_system.crt,
        /opt/blackduck/hub/hub-scan/security/blackduck_system.key]
      interval: 30s
      timeout: 60s
      retries: 15
      start_period: 7200s
    environment:
      HUB_MAX_MEMORY: 2048m
      HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
    volumes:
    - {type: tmpfs, target: /opt/blackduck/hub/hub-scan/security}
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {cpus: '1', memory: 2560M}
        reservations: {cpus: '1', memory: 2560M}
  jobrunner:
    user: jobrunner:root
    image: blackducksoftware/blackduck-jobrunner:2021.10.6
    env_file: [blackduck-config.env , hub-postgres.env]
    healthcheck:
       test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/health-checks/liveness',
       /opt/blackduck/hub/jobrunner/security/root.crt, /opt/blackduck/hub/jobrunner/security/blackduck_system.crt,
       /opt/blackduck/hub/jobrunner/security/blackduck_system.key]
       interval: 30s
       timeout: 60s
       retries: 15
       start_period: 7200s
    environment:
       HUB_MAX_MEMORY: 4096m
       HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
       org.quartz.scheduler.periodic.maxthreads: 4
       org.quartz.scheduler.periodic.prefetch: 2
       org.quartz.scheduler.ondemand.maxthreads: 8
       org.quartz.scheduler.ondemand.prefetch: 4
    volumes:
    - {type: tmpfs, target: /opt/blackduck/hub/jobrunner/security}
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {cpus: '1', memory: 4608M}
        reservations: {cpus: '1', memory: 4608M}
  cfssl:
    image: blackducksoftware/blackduck-cfssl:1.0.4
    volumes: ['cert-volume:/etc/cfssl']
    env_file: [blackduck-config.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'http://localhost:8888/api/v1/cfssl/scaninfo']
      interval: 30s
      timeout: 10s
      retries: 5
    user: cfssl:root
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {memory: 640M}
        reservations: {memory: 640M}
  logstash:
    image: blackducksoftware/blackduck-logstash:1.0.15
    volumes: ['log-volume:/var/lib/logstash/data']
    env_file: [blackduck-config.env]
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'http://localhost:9600/']
      interval: 30s
      timeout: 10s
      retries: 5
    user: logstash:root
    environment:
       HUB_MAX_MEMORY: 2048m
       DAYS_TO_KEEP_LOGS: 30
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {memory: 2560M}
        reservations: {memory: 1024M}
  registration:
    image: blackducksoftware/blackduck-registration:2021.10.6
    volumes:
    - config-volume:/opt/blackduck/hub/hub-registration/config
    - {type: tmpfs, target: /opt/blackduck/hub/hub-registration/security}
    env_file: [blackduck-config.env]
    environment:
      HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/registration/health-checks/liveness',
        /opt/blackduck/hub/hub-registration/security/root.crt, /opt/blackduck/hub/hub-registration/security/blackduck_system.crt,
        /opt/blackduck/hub/hub-registration/security/blackduck_system.key]
      interval: 30s
      timeout: 10s
      retries: 5
    user: registration:root
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {memory: 640M}
        reservations: {memory: 640M}
  webserver:
    image: blackducksoftware/blackduck-nginx:2.0.9
    ports: ['443:8443']
    env_file: [hub-webserver.env, blackduck-config.env]
    environment:
       HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/health-checks/liveness',
        /opt/blackduck/hub/webserver/security/root.crt]
      interval: 30s
      timeout: 10s
      retries: 5
    user: nginx:root
    volumes:
    - {type: tmpfs, target: /opt/blackduck/hub/webserver/security}
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 15s, window: 60s}
      resources:
        limits: {memory: 512M}
        reservations: {memory: 512M}
  webui:
    image: blackducksoftware/blackduck-webui:2021.10.6
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/health-checks/liveness',
        /opt/blackduck/hub/hub-ui/security/root.crt]
      interval: 30s
      timeout: 10s
      retries: 5
    user: webui:root
    volumes:
      - {type: tmpfs, target: /opt/blackduck/hub/hub-ui/security}
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 15s, window: 60s}
      resources:
        limits: {cpus: '1', memory: 640M}
        reservations: {cpus: '0.5', memory: 640M}

  documentation:
    image: blackducksoftware/blackduck-documentation:2021.10.6
    env_file: [blackduck-config.env]
    user: documentation:root
    environment:
      HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://127.0.0.1:8443/hubdoc/health-checks/liveness',
        /opt/blackduck/hub/hub-documentation/security/root.crt]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
    - {type: tmpfs, target: /opt/blackduck/hub/hub-documentation/security}
    deploy:
      mode: replicated
      restart_policy: {condition: on-failure, delay: 5s, window: 60s}
      resources:
        limits: {memory: 512M}
        reservations: {memory: 512M}
  uploadcache:
      image: blackducksoftware/blackduck-upload-cache:1.0.19
      env_file: [blackduck-config.env]
      environment:
        HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
      volumes:
      - uploadcache-volume:/opt/blackduck/hub/blackduck-upload-cache/uploads
      - uploadcache-keys-volume:/opt/blackduck/hub/blackduck-upload-cache/keys
      - {type: tmpfs, target: /opt/blackduck/hub/blackduck-upload-cache/security}
      healthcheck:
        test: [CMD, /usr/local/bin/healthcheck.sh, 'https://localhost:8086/live?full=1', /opt/blackduck/hub/blackduck-upload-cache/security/root.crt]
        interval: 30s
        timeout: 10s
        retries: 5
      user: 'uploadcache:root'
      deploy:
        mode: replicated
        restart_policy: {condition: on-failure, delay: 5s, window: 60s}
        resources:
          limits: {memory: 512M}
          reservations: {memory: 512M}
  redis:
    image: blackducksoftware/blackduck-redis:2021.10.6
    env_file: [blackduck-config.env]
    environment:
      HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
    user: redis:root
    stop_grace_period: 60s
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, '8379',
        /opt/blackduck/hub/blackduck-redis/security/root.crt,
        /opt/blackduck/hub/blackduck-redis/security/blackduck_system.crt,
        /opt/blackduck/hub/blackduck-redis/security/blackduck_system.key]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
    - {type: tmpfs, target: /opt/blackduck/hub/blackduck-redis/security}
    deploy:
      restart_policy: {condition: any}
      resources:
        limits: {memory: 1024M}
        reservations: {memory: 1024M}
  bomengine:
    image: blackducksoftware/blackduck-bomengine:2021.10.6
    env_file: [blackduck-config.env , hub-postgres.env]
    environment:
      HUB_MAX_MEMORY: 4096m
      HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
    healthcheck:
      test: [CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/api/health-checks/liveness',
        /opt/blackduck/hub/blackduck-bomengine/security/root.crt, /opt/blackduck/hub/blackduck-bomengine/security/blackduck_system.crt,
        /opt/blackduck/hub/blackduck-bomengine/security/blackduck_system.key]
      interval: 30s
      timeout: 60s
      retries: 15
    user: bomengine:root
    volumes:
      - { type: tmpfs, target: /opt/blackduck/hub/blackduck-bomengine/security }
    deploy:
        mode: replicated
        restart_policy: {condition: on-failure, delay: 5s, window: 60s}
        resources:
          limits: {memory: 4608M}
          reservations: {memory: 1536M}
  matchengine:
    image: blackducksoftware/blackduck-matchengine:2021.10.6
    user: matchengine:root
    healthcheck:
      test: [ CMD, /usr/local/bin/docker-healthcheck.sh, 'https://localhost:8443/api/health-checks/liveness',
              /opt/blackduck/hub/blackduck-matchengine/security/root.crt, /opt/blackduck/hub/blackduck-matchengine/security/blackduck_system.crt,
              /opt/blackduck/hub/blackduck-matchengine/security/blackduck_system.key ]
      interval: 30s
      timeout: 60s
      retries: 15
      start_period: 7200s
    env_file: [ blackduck-config.env , hub-postgres.env ]
    volumes:
      - { type: tmpfs, target: /opt/blackduck/hub/blackduck-matchengine/security }
    deploy:
      mode: replicated
      restart_policy: { condition: on-failure, delay: 5s, window: 60s }
      resources:
        limits: { memory: 4608M, cpus: '1' }
        reservations: { memory: 1536M, cpus: '1' }
    environment:
      HUB_MAX_MEMORY: 4096m
      HUB_JOBRUNNER_HOST: 'tasks.jobrunner.'
  rabbitmq:
    image: blackducksoftware/rabbitmq:1.2.6
    hostname: rabbitmq
    volumes: 
      - rabbitmq-data-volume:/var/lib/rabbitmq
      - {type: tmpfs, target: /opt/blackduck/rabbitmq/security}
    environment: {
      BLACKDUCK_RABBIT_SCAOP: 'true'
    }
    env_file: [blackduck-config.env]
    healthcheck:
      test: [CMD, rabbitmq-diagnostics, -q, status]
      interval: 30s
      timeout: 10s
      retries: 5
    user: rabbitmq:root
    deploy:
        mode: replicated
        restart_policy: {condition: any, delay: 5s, window: 60s}
        resources:
          limits: {memory: 1024M}
          reservations: {memory: 1024M}
volumes: {postgres96-data-volume: null, authentication-volume: null, cert-volume: null,
  config-volume: null, log-volume: null, uploadcache-volume: null, uploadcache-keys-volume: null, rabbitmq-data-volume: null }
