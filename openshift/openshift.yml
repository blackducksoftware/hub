apiVersion: v1
kind: List
metadata:
  name: hub
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: cfssl
  spec:
    ports:
    - name: 8888-tcp
      port: 8888
      protocol: TCP
      targetPort: 8888
    selector:
      app: cfssl
- apiVersion: v1
  kind: Service
  metadata:
    name: documentation
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: documentation
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: logstash
  spec:
    ports:
    - name: 5044-tcp-filebeat
      port: 5044
      protocol: TCP
      targetPort: 5044
    selector:
      app: webapp-logstash
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: webserver
  spec:
    ports:
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: webserver
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
# Delete this service and use
# webserver instead
  kind: Service
  metadata:
    name: nginx-webapp-logstash
  spec:
    ports:
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: webserver
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
# Delete this service and use individual
# logstash and webapp instead
  kind: Service
  metadata:
    labels:
      app: nginx-webapp-logstash
      tier: nginx-webapp-logstash
    name: nginx-webapp-logstash-exposed
  spec:
    ports:
    - name: port-1
      port: 4560
      protocol: TCP
      targetPort: 4560
    - name: port-2
      port: 5044
      protocol: TCP
      targetPort: 5044
    - name: port-3
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: webapp-logstash
      tier: webapp-logstash
    sessionAffinity: None
    type: LoadBalancer
- apiVersion: v1
# Delete this service and use individual
# webserver instead
  kind: Service
  metadata:
    labels:
      app: nginx-webapp-logstash
      tier: nginx-webapp-logstash
    name: nginx2
  spec:
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: webserver
      tier: webserver
    sessionAffinity: None
    type: LoadBalancer
- apiVersion: v1
  kind: Service
  metadata:
    name: registration
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: registration
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: solr
  spec:
    ports:
    - name: 8983-tcp
      port: 8983
      protocol: TCP
      targetPort: 8983
    selector:
      app: solr
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: webapp
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: webapp-logstash
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: zookeeper
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
      protocol: TCP
      targetPort: 2181
    selector:
      app: zookeeper
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ReplicationController
  metadata:
    generation: 1
    labels:
      app: cfssl
      tier: cfssl
    name: cfssl
  spec:
    replicas: 1
    selector:
      app: cfssl
      tier: cfssl
    template:
      metadata:
        labels:
          app: cfssl
          tier: cfssl
        name: cfssl
      spec:
        containers:
        - image: blackducksoftware/hub-cfssl:4.5.0
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - http://localhost:8888/api/v1/cfssl/scaninfo
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          imagePullPolicy: Always
          name: hub-cfssl
          env:
            - name: HUB_VERSION
              valueFrom:
                configMapKeyRef:
                  name: hub-config
                  key: HUB_VERSION
          ports:
          - containerPort: 8888
          volumeMounts:
          - mountPath: /etc/cfssl
            name: dir-1
        volumes:
        - emptyDir: {}
          name: dir-1
- apiVersion: v1
  kind: ReplicationController
  metadata:
    generation: 1
    labels:
      app: documentation
    name: documentation
  spec:
    replicas: 1
    selector:
      app: documentation
    template:
      metadata:
        labels:
          app: documentation
        name: documentation
      spec:
        containers:
        - image: blackducksoftware/hub-documentation:4.5.0
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://127.0.0.1:8443/hubdoc/health-checks/liveness
                - /opt/blackduck/hub/hub-documentation/security/root.crt
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          imagePullPolicy: Always
          name: documentation
          env:
            - name: HUB_VERSION
              valueFrom:
                configMapKeyRef:
                  name: hub-config
                  key: HUB_VERSION
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
- apiVersion: v1
  kind: ReplicationController
  metadata:
    generation: 1
    labels:
      app: webserver
    name: webserver
  spec:
    replicas: 1
    selector:
      app: webserver
    template:
      metadata:
        labels:
          app: webserver
        name: webserver
      spec:
        volumes:
        - emptyDir: {}
          name: dir-webserver
        containers:
        - image: blackducksoftware/hub-nginx:4.5.0
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://localhost:8443/health-checks/liveness
                - /opt/blackduck/hub/webserver/security/root.crt
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          imagePullPolicy: Always
          name: webserver
          env:
            - name: HUB_VERSION
              valueFrom:
                configMapKeyRef:
                  name: hub-config
                  key: HUB_VERSION
          ports:
          - containerPort: 8443
            protocol: TCP
          resources:
            requests:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
- apiVersion: v1
  kind: ReplicationController
  metadata:
    labels:
      app: jobrunner
      tier: jobrunner
    name: jobrunner
  spec:
    replicas: 1
    selector:
      app: jobrunner
      tier: jobrunner
    template:
      metadata:
        labels:
          app: jobrunner
          tier: jobrunner
        name: jobrunner
      spec:
        containers:
          - name: jobrunner
            image: blackducksoftware/hub-jobrunner:4.5.0
            livenessProbe:
              exec:
                command:
                 - /usr/local/bin/docker-healthcheck.sh
              initialDelaySeconds: 60
              timeoutSeconds: 60
              periodSeconds: 30
            imagePullPolicy: Always
            env:
            - name: HUB_METRICS_HTTPEXPORTER_ENABLED
              value: "true"
            - name: HUB_POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: HUB_POSTGRES_HOST
                  name: hub-config
            - name: HUB_POSTGRES_ENABLE_SSL
              valueFrom:
                configMapKeyRef:
                  key: HUB_POSTGRES_ENABLE_SSL
                  name: hub-config
            - name: HUB_MAX_MEMORY
              value: 4096m
            - name: blackduck_hub_db_password
              valueFrom:
                configMapKeyRef:
                  key: blackduck_hub_db_password
                  name: hub-config
            - name: blackduck_hub_report_admin_db_password
              valueFrom:
                configMapKeyRef:
                  key: blackduck_hub_report_admin_db_password
                  name: hub-config
            - name: blackduck_hub_admin_db_password
              valueFrom:
                configMapKeyRef:
                  key: blackduck_hub_admin_db_password
                  name: hub-config
            - name: blackduck_hub_report_admin_db_password
              valueFrom:
                configMapKeyRef:
                  key: blackduck_hub_report_admin_db_password
                  name: hub-config
            - name: blackduck_hub_bdio_db_password
              valueFrom:
                configMapKeyRef:
                  key: blackduck_hub_bdio_db_password
                  name: hub-config
            - name: HUB_POSTGRES_ADMIN
              valueFrom:
                configMapKeyRef:
                  name: hub-config
                  key: HUB_POSTGRES_ADMIN
            - name: blackduck_hub_report_db_password
              valueFrom:
                configMapKeyRef:
                  key: blackduck_hub_report_db_password
                  name: hub-config
            - name: HUB_VERSION
              valueFrom:
                configMapKeyRef:
                  name: hub-config
                  key: HUB_VERSION
- apiVersion: v1
  kind: ReplicationController
  metadata:
    labels:
      app: webapp-logstash
      tier: webapp-logstash
    name: webapp-logstash
  spec:
    replicas: 1
    selector:
      app: webapp-logstash
      tier: webapp-logstash
    template:
      metadata:
        labels:
          app: webapp-logstash
          tier: webapp-logstash
        name: webapp-logstash
      spec:
        volumes:
        - emptyDir: {}
          name: dir-webapp
        - emptyDir: {}
          name: dir-logstash
        containers:
        - image: blackducksoftware/hub-webapp:4.5.0
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://127.0.0.1:8443/api/health-checks/liveness
                - /opt/blackduck/hub/hub-webapp/security/root.crt
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 30
          imagePullPolicy: Always
          name: webapp
          ports:
          - containerPort: 8443
          resources:
            requests:
              memory: 2Gi
          env:
          - name: HUB_POSTGRES_ENABLE_SSL
            valueFrom:
              configMapKeyRef:
                key: HUB_POSTGRES_ENABLE_SSL
                name: hub-config
          - name: HUB_POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                key: HUB_POSTGRES_HOST
                name: hub-config
          - name: blackduck_hub_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_db_password
                name: hub-config
          - name: blackduck_hub_report_admin_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_report_admin_db_password
                name: hub-config
          - name: blackduck_hub_admin_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_admin_db_password
                name: hub-config
          - name: blackduck_hub_bdio_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_bdio_db_password
                name: hub-config
          - name: HUB_VERSION
            valueFrom:
              configMapKeyRef:
                name: hub-config
                key: HUB_VERSION
          volumeMounts:
          - mountPath: /opt/blackduck/hub/logs
            name: dir-webapp
          - mountPath: /var/lib/logstash/data
            name: dir-logstash
        - image: blackducksoftware/hub-logstash:4.5.0
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - http://localhost:9600/
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 30
          imagePullPolicy: Always
          name: logstash
          env:
            - name: HUB_VERSION
              valueFrom:
                configMapKeyRef:
                  name: hub-config
                  key: HUB_VERSION
          ports:
          - containerPort: 4560
            protocol: TCP
          - containerPort: 5044
            protocol: TCP
          resources:
            requests:
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/blackduck/hub/logs
            name: dir-webapp
          - mountPath: /var/lib/logstash/data
            name: dir-logstash
- apiVersion: v1
  kind: ReplicationController
  metadata:
    labels:
      app: registration
      tier: registration
    name: registration
  spec:
    replicas: 1
    selector:
      app: registration
      tier: registration
    template:
      metadata:
        labels:
          app: registration
          tier: registration
        name: registration
      spec:
        volumes:
        - emptyDir: {}
          name: dir-1
        containers:
        - image: blackducksoftware/hub-registration:4.5.0
          volumeMounts:
          - mountPath: "/opt/blackduck/hub/hub-registration/config"
            name: dir-1
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://localhost:8443/registration/health-checks/liveness
                - /opt/blackduck/hub/hub-registration/security/root.crt
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 30
          imagePullPolicy: Always
          name: registration
          env:
            - name: HUB_VERSION
              valueFrom:
                configMapKeyRef:
                  name: hub-config
                  key: HUB_VERSION
          ports:
          - containerPort: 8443
- apiVersion: v1
  kind: ReplicationController
  metadata:
    labels:
      app: solr
      tier: solr
    name: solr
  spec:
    replicas: 1
    selector:
      app: solr
      tier: solr
    template:
      metadata:
        labels:
          app: solr
          tier: solr
        name: solr
      spec:
        volumes:
        - name: solr-dir
          emptyDir: {}
        containers:
        - image: blackducksoftware/hub-solr:4.5.0
          volumeMounts:
          - name: solr-dir
            mountPath: /opt/blackduck/hub/solr/cores.data          
          livenessProbe:
            exec:
              command:
               - /usr/local/bin/docker-healthcheck.sh
               - http://localhost:8983/solr/project/admin/ping?wt=json
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 30
          imagePullPolicy: Always
          name: solr
          env:
            - name: HUB_VERSION
              valueFrom:
                configMapKeyRef:
                  name: hub-config
                  key: HUB_VERSION
- apiVersion: v1
  kind: ReplicationController
  metadata:
    labels:
      app: zookeeper
      tier: zookeeper
    name: zookeeper
  spec:
    replicas: 1
    selector:
      app: zookeeper
      tier: zookeeper
    template:
      metadata:
        labels:
          app: zookeeper
          tier: zookeeper
        name: zookeeper
      spec:
        containers:
        - image: blackducksoftware/hub-zookeeper:4.5.0
          livenessProbe:
            exec:
              command:
                - zkServer.sh
                - status
                - /opt/blackduck/zookeeper/conf/zoo.cfg
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 30
          imagePullPolicy: Always
          name: zookeeper
          env:
          - name: HUB_MAX_MEMORY
            value: 2Gi
          - name: HUB_VERSION
            valueFrom:
              configMapKeyRef:
                name: hub-config
                key: HUB_VERSION
- apiVersion: v1
  data:
    HUB_POSTGRES_ADMIN: blackduck
    HUB_POSTGRES_ENABLE_SSL: "false"
    HUB_POSTGRES_HOST: blackduck123.rds.amazonaws.com
    HUB_POSTGRES_PORT: "5432"
    HUB_POSTGRES_USER: blackduck_user
    HUB_WEBSERVER_PORT: "8443"
    # DO NOT REMOVE HUB_VERSION!!
    HUB_VERSION: 4.5.0
    IPV4_ONLY: "0"
    PUBLIC_HUB_WEBSERVER_PORT: "443"
    blackduck_hub_db_password: blackduck
    blackduck_hub_report_admin_db_password: blackduck
    blackduck_hub_admin_db_password: blackduck
    blackduck_hub_report_admin_db_password: blackduck
    blackduck_hub_bdio_db_password: blackduck
    blackduck_hub_report_db_password: blackduck
  kind: ConfigMap
  metadata:
    name: hub-config

- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: hub-scan
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: hub-scan
        name: hub-scan
      spec:
        containers:
        - image: blackducksoftware/hub-scan:4.5.0
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://127.0.0.1:8443/api/health-checks/liveness
                - /opt/blackduck/hub/hub-scan/security/root.crt
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 30
          env:
          - name: HUB_POSTGRES_ENABLE_SSL
            valueFrom:
              configMapKeyRef:
                key: HUB_POSTGRES_ENABLE_SSL
                name: hub-config
          - name: HUB_POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                key: HUB_POSTGRES_HOST
                name: hub-config
          - name: blackduck_hub_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_db_password
                name: hub-config
          - name: blackduck_hub_admin_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_admin_db_password
                name: hub-config
          # We just use the admin DB instead of the report admin db.
          # admin DB is a super set of report admin db.
          - name: blackduck_hub_report_admin_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_admin_db_password
                name: hub-config
          - name: blackduck_hub_bdio_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_bdio_db_password
                name: hub-config
          - name: blackduck_hub_report_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_admin_db_password
                name: hub-config
          - name: HUB_MAX_MEMORY
            value: 2048m
          - name: HUB_VERSION
            valueFrom:
              configMapKeyRef:
                name: hub-config
                key: HUB_VERSION
          imagePullPolicy: Always
          name: hub-scan
          resources:
            limits:
              memory: "2G"
            requests:
              memory: "2G"
          ports:
          - containerPort: 8443
- apiVersion: v1
  kind: Service
  metadata:
    name: scan # this is the default service name the hub looks for.
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      targetPort: 8443
    selector:
      app: hub-scan
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: ReplicationController
  metadata:
    name: hub-authentication
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: hub-authentication
        name: hub-authentication
      spec:
        volumes:
        - emptyDir: {}
          name: dir-authentication
        containers:
        - image: blackducksoftware/hub-authentication:4.5.0
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://127.0.0.1:8443/api/health-checks/liveness
                - /opt/blackduck/hub/hub-authentication/security/root.crt
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 30
          env:
          - name: HUB_POSTGRES_ENABLE_SSL
            valueFrom:
              configMapKeyRef:
                key: HUB_POSTGRES_ENABLE_SSL
                name: hub-config
          - name: HUB_POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                key: HUB_POSTGRES_HOST
                name: hub-config
          - name: blackduck_hub_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_db_password
                name: hub-config
          - name: blackduck_hub_admin_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_admin_db_password
                name: hub-config
          # We just use the admin DB instead of the report admin db.
          # admin DB is a super set of report admin db.
          - name: blackduck_hub_report_admin_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_admin_db_password
                name: hub-config
          - name: blackduck_hub_bdio_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_bdio_db_password
                name: hub-config
          - name: blackduck_hub_report_db_password
            valueFrom:
              configMapKeyRef:
                key: blackduck_hub_admin_db_password
                name: hub-config
          - name: HUB_MAX_MEMORY
            value: 512m
          - name: HUB_VERSION
            valueFrom:
              configMapKeyRef:
                name: hub-config
                key: HUB_VERSION
          imagePullPolicy: Always
          env:
          - name: HUB_MAX_MEMORY
            value: 512m
          envFrom:
          - configMapRef:
              name: hub-config
          name: hub-authentication
          volumeMounts: 
          - mountPath: "/opt/blackduck/hub/hub-authentication/security"
            name: dir-authentication         
          resources:
            limits:
              memory: "1G"
            requests:
              memory: "1G"
          ports:
          - containerPort: 8443
- apiVersion: v1
  kind: Service
  metadata:
    name: authentication # this is the default service name the hub looks for.
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      targetPort: 8443
    selector:
      app: hub-authentication
  status:
    loadBalancer: {}
